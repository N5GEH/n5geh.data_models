name: Generate Swagger UI for API specs of the data models

on:
  push:
    # Adjust branches as needed
    branches:
      - '**'

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Find API spec files and build matrix
        id: build-matrix
        run: |
          # Find all YAML files under any "api_docs" directory
          specs=$(find . -type f -path "*/api_docs/*.yaml")
          echo "Found spec files:"
          echo "$specs"

          # Build a JSON matrix where for each spec the output folder is set relative to the spec's directory.
          matrix="[]"
          for spec in $specs; do
            base=$(basename "$spec" .yaml)
            spec_dir=$(dirname "$spec")
            # Output folder will be placed inside each api_docs folder:
            output_dir="${spec_dir}/swagger-ui/${base}"
            newEntry="{\"spec\":\"${spec}\", \"output\":\"${output_dir}\"}"
            if [ "$matrix" = "[]" ]; then
              matrix="[$newEntry]"
            else
              matrix="${matrix%]}"
              matrix+=",${newEntry}]"
            fi
          done

          echo "Matrix JSON: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  update-docs:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      # Use the dynamically generated matrix.
      # Each job will process one API spec file.
      matrix:
        include: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create output folder if not present
        run: mkdir -p "${{ matrix.output }}"

      - name: Generate Swagger UI for ${{ matrix.spec }}
        uses: Legion2/swagger-ui-action@v1
        with:
          # The file to process from the matrix.
          spec-file: ${{ matrix.spec }}
          # The output directory, computed in the matrix (e.g. swagger-ui/ActuatorFiware)
          output: ${{ matrix.output }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}